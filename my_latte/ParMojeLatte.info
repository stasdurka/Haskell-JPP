-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ParMojeLatte.y
-----------------------------------------------------------------------------

state 67 contains 7 shift/reduce conflicts.

rule 32 is unused
rule 33 is unused
rule 34 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	ListTopDef -> TopDef                               (6)
	ListTopDef -> TopDef ListTopDef                    (7)
	Arg -> Type Ident                                  (8)
	ListArg ->                                         (9)
	ListArg -> Arg                                     (10)
	ListArg -> Arg ',' ListArg                         (11)
	Block -> '[' ListDecl ']' '{' Stmt '}'             (12)
	Decl -> Type Item ';'                              (13)
	Item -> Ident                                      (14)
	Item -> Ident '=' Expr                             (15)
	ListDecl -> Decl                                   (16)
	ListDecl -> Decl ListDecl                          (17)
	Stmt -> Stmt Stmt                                  (18)
	Stmt -> ';'                                        (19)
	Stmt -> Block                                      (20)
	Stmt -> LValue '=' Expr ';'                        (21)
	Stmt -> LValue '++' ';'                            (22)
	Stmt -> LValue '--' ';'                            (23)
	Stmt -> 'return' Expr ';'                          (24)
	Stmt -> 'if' '(' Expr ')' Block                    (25)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (26)
	Stmt -> 'while' '(' Expr ')' Block                 (27)
	Stmt -> 'for' Ident 'in' 'range' '(' Expr ')' Block   (28)
	Type -> 'int'                                      (29)
	Type -> 'string'                                   (30)
	Type -> 'boolean'                                  (31)
	ListType ->                                        (32)
	ListType -> Type                                   (33)
	ListType -> Type ',' ListType                      (34)
	LValue -> Ident                                    (35)
	Expr6 -> LValue                                    (36)
	Expr6 -> Integer                                   (37)
	Expr6 -> 'true'                                    (38)
	Expr6 -> 'false'                                   (39)
	Expr6 -> Ident '(' ListExpr ')'                    (40)
	Expr6 -> String                                    (41)
	Expr6 -> Expr7                                     (42)
	Expr5 -> '-' Expr6                                 (43)
	Expr5 -> '!' Expr6                                 (44)
	Expr5 -> Expr6                                     (45)
	Expr4 -> Expr4 MulOp Expr5                         (46)
	Expr4 -> Expr5                                     (47)
	Expr3 -> Expr3 AddOp Expr4                         (48)
	Expr3 -> Expr4                                     (49)
	Expr2 -> Expr2 RelOp Expr3                         (50)
	Expr2 -> Expr3                                     (51)
	Expr1 -> Expr2 '&&' Expr1                          (52)
	Expr1 -> Expr2                                     (53)
	Expr -> Expr1 '||' Expr                            (54)
	Expr -> Expr1                                      (55)
	Expr7 -> '(' Expr ')'                              (56)
	ListExpr ->                                        (57)
	ListExpr -> Expr                                   (58)
	ListExpr -> Expr ',' ListExpr                      (59)
	AddOp -> '+'                                       (60)
	AddOp -> '-'                                       (61)
	MulOp -> '*'                                       (62)
	MulOp -> '/'                                       (63)
	MulOp -> '%'                                       (64)
	RelOp -> '<'                                       (65)
	RelOp -> '<='                                      (66)
	RelOp -> '>'                                       (67)
	RelOp -> '>='                                      (68)
	RelOp -> '=='                                      (69)
	RelOp -> '!='                                      (70)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	';'            { PT _ (TS _ 14) }
	'<'            { PT _ (TS _ 15) }
	'<='           { PT _ (TS _ 16) }
	'='            { PT _ (TS _ 17) }
	'=='           { PT _ (TS _ 18) }
	'>'            { PT _ (TS _ 19) }
	'>='           { PT _ (TS _ 20) }
	'['            { PT _ (TS _ 21) }
	']'            { PT _ (TS _ 22) }
	'boolean'      { PT _ (TS _ 23) }
	'else'         { PT _ (TS _ 24) }
	'false'        { PT _ (TS _ 25) }
	'for'          { PT _ (TS _ 26) }
	'if'           { PT _ (TS _ 27) }
	'in'           { PT _ (TS _ 28) }
	'int'          { PT _ (TS _ 29) }
	'range'        { PT _ (TS _ 30) }
	'return'       { PT _ (TS _ 31) }
	'string'       { PT _ (TS _ 32) }
	'true'         { PT _ (TS _ 33) }
	'while'        { PT _ (TS _ 34) }
	'{'            { PT _ (TS _ 35) }
	'||'           { PT _ (TS _ 36) }
	'}'            { PT _ (TS _ 37) }
	L_Ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rule  5
	ListTopDef      rules 6, 7
	Arg             rule  8
	ListArg         rules 9, 10, 11
	Block           rule  12
	Decl            rule  13
	Item            rules 14, 15
	ListDecl        rules 16, 17
	Stmt            rules 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28
	Type            rules 29, 30, 31
	ListType        rules 32, 33, 34
	LValue          rule  35
	Expr6           rules 36, 37, 38, 39, 40, 41, 42
	Expr5           rules 43, 44, 45
	Expr4           rules 46, 47
	Expr3           rules 48, 49
	Expr2           rules 50, 51
	Expr1           rules 52, 53
	Expr            rules 54, 55
	Expr7           rule  56
	ListExpr        rules 57, 58, 59
	AddOp           rules 60, 61
	MulOp           rules 62, 63, 64
	RelOp           rules 65, 66, 67, 68, 69, 70

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	Type           goto state 6

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'in'           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef .                              (rule 6)
	ListTopDef -> TopDef . ListTopDef                   (rule 7)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	%eof           reduce using rule 6

	TopDef         goto state 4
	ListTopDef     goto state 11
	Type           goto state 6

State 5

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 6

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)

	L_Ident        shift, and enter state 2

	Ident          goto state 10

State 7

	Type -> 'boolean' .                                 (rule 31)

	L_Ident        reduce using rule 31


State 8

	Type -> 'int' .                                     (rule 29)

	L_Ident        reduce using rule 29


State 9

	Type -> 'string' .                                  (rule 30)

	L_Ident        reduce using rule 30


State 10

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 12


State 11

	ListTopDef -> TopDef ListTopDef .                   (rule 7)

	%eof           reduce using rule 7


State 12

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 9
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9

	Arg            goto state 13
	ListArg        goto state 14
	Type           goto state 15

State 13

	ListArg -> Arg .                                    (rule 10)
	ListArg -> Arg . ',' ListArg                        (rule 11)

	')'            reduce using rule 10
	','            shift, and enter state 18


State 14

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 17


State 15

	Arg -> Type . Ident                                 (rule 8)

	L_Ident        shift, and enter state 2

	Ident          goto state 16

State 16

	Arg -> Type Ident .                                 (rule 8)

	')'            reduce using rule 8
	','            reduce using rule 8


State 17

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'['            shift, and enter state 21

	Block          goto state 20

State 18

	ListArg -> Arg ',' . ListArg                        (rule 11)

	')'            reduce using rule 9
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9

	Arg            goto state 13
	ListArg        goto state 19
	Type           goto state 15

State 19

	ListArg -> Arg ',' ListArg .                        (rule 11)

	')'            reduce using rule 11


State 20

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'boolean'      reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	%eof           reduce using rule 5


State 21

	Block -> '[' . ListDecl ']' '{' Stmt '}'            (rule 12)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9

	Decl           goto state 22
	ListDecl       goto state 23
	Type           goto state 24

State 22

	ListDecl -> Decl .                                  (rule 16)
	ListDecl -> Decl . ListDecl                         (rule 17)

	']'            reduce using rule 16
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9

	Decl           goto state 22
	ListDecl       goto state 28
	Type           goto state 24

State 23

	Block -> '[' ListDecl . ']' '{' Stmt '}'            (rule 12)

	']'            shift, and enter state 27


State 24

	Decl -> Type . Item ';'                             (rule 13)

	L_Ident        shift, and enter state 2

	Ident          goto state 25
	Item           goto state 26

State 25

	Item -> Ident .                                     (rule 14)
	Item -> Ident . '=' Expr                            (rule 15)

	';'            reduce using rule 14
	'='            shift, and enter state 31


State 26

	Decl -> Type Item . ';'                             (rule 13)

	';'            shift, and enter state 30


State 27

	Block -> '[' ListDecl ']' . '{' Stmt '}'            (rule 12)

	'{'            shift, and enter state 29


State 28

	ListDecl -> Decl ListDecl .                         (rule 17)

	']'            reduce using rule 17


State 29

	Block -> '[' ListDecl ']' '{' . Stmt '}'            (rule 12)

	';'            shift, and enter state 55
	'['            shift, and enter state 21
	'for'          shift, and enter state 56
	'if'           shift, and enter state 57
	'return'       shift, and enter state 58
	'while'        shift, and enter state 59
	L_Ident        shift, and enter state 2

	Ident          goto state 51
	Block          goto state 52
	Stmt           goto state 53
	LValue         goto state 54

State 30

	Decl -> Type Item ';' .                             (rule 13)

	']'            reduce using rule 13
	'boolean'      reduce using rule 13
	'int'          reduce using rule 13
	'string'       reduce using rule 13


State 31

	Item -> Ident '=' . Expr                            (rule 15)

	'!'            shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'false'        shift, and enter state 47
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 32
	Integer        goto state 33
	String         goto state 34
	LValue         goto state 35
	Expr6          goto state 36
	Expr5          goto state 37
	Expr4          goto state 38
	Expr3          goto state 39
	Expr2          goto state 40
	Expr1          goto state 41
	Expr           goto state 42
	Expr7          goto state 43

State 32

	LValue -> Ident .                                   (rule 35)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 40)

	'!='           reduce using rule 35
	'%'            reduce using rule 35
	'&&'           reduce using rule 35
	'('            shift, and enter state 88
	')'            reduce using rule 35
	'*'            reduce using rule 35
	'+'            reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	'/'            reduce using rule 35
	';'            reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'=='           reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	'||'           reduce using rule 35


State 33

	Expr6 -> Integer .                                  (rule 37)

	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'&&'           reduce using rule 37
	')'            reduce using rule 37
	'*'            reduce using rule 37
	'+'            reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'/'            reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'||'           reduce using rule 37


State 34

	Expr6 -> String .                                   (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'||'           reduce using rule 41


State 35

	Expr6 -> LValue .                                   (rule 36)

	'!='           reduce using rule 36
	'%'            reduce using rule 36
	'&&'           reduce using rule 36
	')'            reduce using rule 36
	'*'            reduce using rule 36
	'+'            reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'/'            reduce using rule 36
	';'            reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'=='           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'||'           reduce using rule 36


State 36

	Expr5 -> Expr6 .                                    (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45


State 37

	Expr4 -> Expr5 .                                    (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 38

	Expr4 -> Expr4 . MulOp Expr5                        (rule 46)
	Expr3 -> Expr4 .                                    (rule 49)

	'!='           reduce using rule 49
	'%'            shift, and enter state 85
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            shift, and enter state 86
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            shift, and enter state 87
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49

	MulOp          goto state 84

State 39

	Expr3 -> Expr3 . AddOp Expr4                        (rule 48)
	Expr2 -> Expr3 .                                    (rule 51)

	'!='           reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'+'            shift, and enter state 82
	','            reduce using rule 51
	'-'            shift, and enter state 83
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51

	AddOp          goto state 81

State 40

	Expr2 -> Expr2 . RelOp Expr3                        (rule 50)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 52)
	Expr1 -> Expr2 .                                    (rule 53)

	'!='           shift, and enter state 74
	'&&'           shift, and enter state 75
	')'            reduce using rule 53
	','            reduce using rule 53
	';'            reduce using rule 53
	'<'            shift, and enter state 76
	'<='           shift, and enter state 77
	'=='           shift, and enter state 78
	'>'            shift, and enter state 79
	'>='           shift, and enter state 80
	'||'           reduce using rule 53

	RelOp          goto state 73

State 41

	Expr -> Expr1 . '||' Expr                           (rule 54)
	Expr -> Expr1 .                                     (rule 55)

	')'            reduce using rule 55
	','            reduce using rule 55
	';'            reduce using rule 55
	'||'           shift, and enter state 72


State 42

	Item -> Ident '=' Expr .                            (rule 15)

	';'            reduce using rule 15


State 43

	Expr6 -> Expr7 .                                    (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42


State 44

	Expr5 -> '!' . Expr6                                (rule 44)

	'('            shift, and enter state 45
	'false'        shift, and enter state 47
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 32
	Integer        goto state 33
	String         goto state 34
	LValue         goto state 35
	Expr6          goto state 71
	Expr7          goto state 43

State 45

	Expr7 -> '(' . Expr ')'                             (rule 56)

	'!'            shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'false'        shift, and enter state 47
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 32
	Integer        goto state 33
	String         goto state 34
	LValue         goto state 35
	Expr6          goto state 36
	Expr5          goto state 37
	Expr4          goto state 38
	Expr3          goto state 39
	Expr2          goto state 40
	Expr1          goto state 41
	Expr           goto state 70
	Expr7          goto state 43

State 46

	Expr5 -> '-' . Expr6                                (rule 43)

	'('            shift, and enter state 45
	'false'        shift, and enter state 47
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 32
	Integer        goto state 33
	String         goto state 34
	LValue         goto state 35
	Expr6          goto state 69
	Expr7          goto state 43

State 47

	Expr6 -> 'false' .                                  (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39


State 48

	Expr6 -> 'true' .                                   (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'||'           reduce using rule 38


State 49

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 50

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 51

	LValue -> Ident .                                   (rule 35)

	'++'           reduce using rule 35
	'--'           reduce using rule 35
	'='            reduce using rule 35


State 52

	Stmt -> Block .                                     (rule 20)

	';'            reduce using rule 20
	'['            reduce using rule 20
	'for'          reduce using rule 20
	'if'           reduce using rule 20
	'return'       reduce using rule 20
	'while'        reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20


State 53

	Block -> '[' ListDecl ']' '{' Stmt . '}'            (rule 12)
	Stmt -> Stmt . Stmt                                 (rule 18)

	';'            shift, and enter state 55
	'['            shift, and enter state 21
	'for'          shift, and enter state 56
	'if'           shift, and enter state 57
	'return'       shift, and enter state 58
	'while'        shift, and enter state 59
	'}'            shift, and enter state 68
	L_Ident        shift, and enter state 2

	Ident          goto state 51
	Block          goto state 52
	Stmt           goto state 67
	LValue         goto state 54

State 54

	Stmt -> LValue . '=' Expr ';'                       (rule 21)
	Stmt -> LValue . '++' ';'                           (rule 22)
	Stmt -> LValue . '--' ';'                           (rule 23)

	'++'           shift, and enter state 64
	'--'           shift, and enter state 65
	'='            shift, and enter state 66


State 55

	Stmt -> ';' .                                       (rule 19)

	';'            reduce using rule 19
	'['            reduce using rule 19
	'for'          reduce using rule 19
	'if'           reduce using rule 19
	'return'       reduce using rule 19
	'while'        reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19


State 56

	Stmt -> 'for' . Ident 'in' 'range' '(' Expr ')' Block    (rule 28)

	L_Ident        shift, and enter state 2

	Ident          goto state 63

State 57

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 25)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 26)

	'('            shift, and enter state 62


State 58

	Stmt -> 'return' . Expr ';'                         (rule 24)

	'!'            shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'false'        shift, and enter state 47
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 32
	Integer        goto state 33
	String         goto state 34
	LValue         goto state 35
	Expr6          goto state 36
	Expr5          goto state 37
	Expr4          goto state 38
	Expr3          goto state 39
	Expr2          goto state 40
	Expr1          goto state 41
	Expr           goto state 61
	Expr7          goto state 43

State 59

	Stmt -> 'while' . '(' Expr ')' Block                (rule 27)

	'('            shift, and enter state 60


State 60

	Stmt -> 'while' '(' . Expr ')' Block                (rule 27)

	'!'            shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'false'        shift, and enter state 47
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 32
	Integer        goto state 33
	String         goto state 34
	LValue         goto state 35
	Expr6          goto state 36
	Expr5          goto state 37
	Expr4          goto state 38
	Expr3          goto state 39
	Expr2          goto state 40
	Expr1          goto state 41
	Expr           goto state 103
	Expr7          goto state 43

State 61

	Stmt -> 'return' Expr . ';'                         (rule 24)

	';'            shift, and enter state 102


State 62

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 25)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 26)

	'!'            shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'false'        shift, and enter state 47
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 32
	Integer        goto state 33
	String         goto state 34
	LValue         goto state 35
	Expr6          goto state 36
	Expr5          goto state 37
	Expr4          goto state 38
	Expr3          goto state 39
	Expr2          goto state 40
	Expr1          goto state 41
	Expr           goto state 101
	Expr7          goto state 43

State 63

	Stmt -> 'for' Ident . 'in' 'range' '(' Expr ')' Block    (rule 28)

	'in'           shift, and enter state 100


State 64

	Stmt -> LValue '++' . ';'                           (rule 22)

	';'            shift, and enter state 99


State 65

	Stmt -> LValue '--' . ';'                           (rule 23)

	';'            shift, and enter state 98


State 66

	Stmt -> LValue '=' . Expr ';'                       (rule 21)

	'!'            shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'false'        shift, and enter state 47
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 32
	Integer        goto state 33
	String         goto state 34
	LValue         goto state 35
	Expr6          goto state 36
	Expr5          goto state 37
	Expr4          goto state 38
	Expr3          goto state 39
	Expr2          goto state 40
	Expr1          goto state 41
	Expr           goto state 97
	Expr7          goto state 43

State 67

	Stmt -> Stmt . Stmt                                 (rule 18)
	Stmt -> Stmt Stmt .                                 (rule 18)

	';'            shift, and enter state 55
			(reduce using rule 18)

	'['            shift, and enter state 21
			(reduce using rule 18)

	'for'          shift, and enter state 56
			(reduce using rule 18)

	'if'           shift, and enter state 57
			(reduce using rule 18)

	'return'       shift, and enter state 58
			(reduce using rule 18)

	'while'        shift, and enter state 59
			(reduce using rule 18)

	'}'            reduce using rule 18
	L_Ident        shift, and enter state 2
			(reduce using rule 18)


	Ident          goto state 51
	Block          goto state 52
	Stmt           goto state 67
	LValue         goto state 54

State 68

	Block -> '[' ListDecl ']' '{' Stmt '}' .            (rule 12)

	';'            reduce using rule 12
	'['            reduce using rule 12
	'boolean'      reduce using rule 12
	'else'         reduce using rule 12
	'for'          reduce using rule 12
	'if'           reduce using rule 12
	'int'          reduce using rule 12
	'return'       reduce using rule 12
	'string'       reduce using rule 12
	'while'        reduce using rule 12
	'}'            reduce using rule 12
	L_Ident        reduce using rule 12
	%eof           reduce using rule 12


State 69

	Expr5 -> '-' Expr6 .                                (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 70

	Expr7 -> '(' Expr . ')'                             (rule 56)

	')'            shift, and enter state 96


State 71

	Expr5 -> '!' Expr6 .                                (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 72

	Expr -> Expr1 '||' . Expr                           (rule 54)

	'!'            shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'false'        shift, and enter state 47
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 32
	Integer        goto state 33
	String         goto state 34
	LValue         goto state 35
	Expr6          goto state 36
	Expr5          goto state 37
	Expr4          goto state 38
	Expr3          goto state 39
	Expr2          goto state 40
	Expr1          goto state 41
	Expr           goto state 95
	Expr7          goto state 43

State 73

	Expr2 -> Expr2 RelOp . Expr3                        (rule 50)

	'!'            shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'false'        shift, and enter state 47
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 32
	Integer        goto state 33
	String         goto state 34
	LValue         goto state 35
	Expr6          goto state 36
	Expr5          goto state 37
	Expr4          goto state 38
	Expr3          goto state 94
	Expr7          goto state 43

State 74

	RelOp -> '!=' .                                     (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 75

	Expr1 -> Expr2 '&&' . Expr1                         (rule 52)

	'!'            shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'false'        shift, and enter state 47
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 32
	Integer        goto state 33
	String         goto state 34
	LValue         goto state 35
	Expr6          goto state 36
	Expr5          goto state 37
	Expr4          goto state 38
	Expr3          goto state 39
	Expr2          goto state 40
	Expr1          goto state 93
	Expr7          goto state 43

State 76

	RelOp -> '<' .                                      (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'false'        reduce using rule 65
	'true'         reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 77

	RelOp -> '<=' .                                     (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 78

	RelOp -> '==' .                                     (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 79

	RelOp -> '>' .                                      (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 80

	RelOp -> '>=' .                                     (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 81

	Expr3 -> Expr3 AddOp . Expr4                        (rule 48)

	'!'            shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'false'        shift, and enter state 47
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 32
	Integer        goto state 33
	String         goto state 34
	LValue         goto state 35
	Expr6          goto state 36
	Expr5          goto state 37
	Expr4          goto state 92
	Expr7          goto state 43

State 82

	AddOp -> '+' .                                      (rule 60)

	'!'            reduce using rule 60
	'('            reduce using rule 60
	'-'            reduce using rule 60
	'false'        reduce using rule 60
	'true'         reduce using rule 60
	L_Ident        reduce using rule 60
	L_integ        reduce using rule 60
	L_quoted       reduce using rule 60


State 83

	AddOp -> '-' .                                      (rule 61)

	'!'            reduce using rule 61
	'('            reduce using rule 61
	'-'            reduce using rule 61
	'false'        reduce using rule 61
	'true'         reduce using rule 61
	L_Ident        reduce using rule 61
	L_integ        reduce using rule 61
	L_quoted       reduce using rule 61


State 84

	Expr4 -> Expr4 MulOp . Expr5                        (rule 46)

	'!'            shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'false'        shift, and enter state 47
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 32
	Integer        goto state 33
	String         goto state 34
	LValue         goto state 35
	Expr6          goto state 36
	Expr5          goto state 91
	Expr7          goto state 43

State 85

	MulOp -> '%' .                                      (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'false'        reduce using rule 64
	'true'         reduce using rule 64
	L_Ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 86

	MulOp -> '*' .                                      (rule 62)

	'!'            reduce using rule 62
	'('            reduce using rule 62
	'-'            reduce using rule 62
	'false'        reduce using rule 62
	'true'         reduce using rule 62
	L_Ident        reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62


State 87

	MulOp -> '/' .                                      (rule 63)

	'!'            reduce using rule 63
	'('            reduce using rule 63
	'-'            reduce using rule 63
	'false'        reduce using rule 63
	'true'         reduce using rule 63
	L_Ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 88

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 40)

	'!'            shift, and enter state 44
	'('            shift, and enter state 45
	')'            reduce using rule 57
	'-'            shift, and enter state 46
	'false'        shift, and enter state 47
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 32
	Integer        goto state 33
	String         goto state 34
	LValue         goto state 35
	Expr6          goto state 36
	Expr5          goto state 37
	Expr4          goto state 38
	Expr3          goto state 39
	Expr2          goto state 40
	Expr1          goto state 41
	Expr           goto state 89
	Expr7          goto state 43
	ListExpr       goto state 90

State 89

	ListExpr -> Expr .                                  (rule 58)
	ListExpr -> Expr . ',' ListExpr                     (rule 59)

	')'            reduce using rule 58
	','            shift, and enter state 109


State 90

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 40)

	')'            shift, and enter state 108


State 91

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46


State 92

	Expr4 -> Expr4 . MulOp Expr5                        (rule 46)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 48)

	'!='           reduce using rule 48
	'%'            shift, and enter state 85
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            shift, and enter state 86
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            shift, and enter state 87
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48

	MulOp          goto state 84

State 93

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 52)

	')'            reduce using rule 52
	','            reduce using rule 52
	';'            reduce using rule 52
	'||'           reduce using rule 52


State 94

	Expr3 -> Expr3 . AddOp Expr4                        (rule 48)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 50)

	'!='           reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'+'            shift, and enter state 82
	','            reduce using rule 50
	'-'            shift, and enter state 83
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50

	AddOp          goto state 81

State 95

	Expr -> Expr1 '||' Expr .                           (rule 54)

	')'            reduce using rule 54
	','            reduce using rule 54
	';'            reduce using rule 54


State 96

	Expr7 -> '(' Expr ')' .                             (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'||'           reduce using rule 56


State 97

	Stmt -> LValue '=' Expr . ';'                       (rule 21)

	';'            shift, and enter state 107


State 98

	Stmt -> LValue '--' ';' .                           (rule 23)

	';'            reduce using rule 23
	'['            reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'return'       reduce using rule 23
	'while'        reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23


State 99

	Stmt -> LValue '++' ';' .                           (rule 22)

	';'            reduce using rule 22
	'['            reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'return'       reduce using rule 22
	'while'        reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22


State 100

	Stmt -> 'for' Ident 'in' . 'range' '(' Expr ')' Block    (rule 28)

	'range'        shift, and enter state 106


State 101

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 25)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 26)

	')'            shift, and enter state 105


State 102

	Stmt -> 'return' Expr ';' .                         (rule 24)

	';'            reduce using rule 24
	'['            reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'return'       reduce using rule 24
	'while'        reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24


State 103

	Stmt -> 'while' '(' Expr . ')' Block                (rule 27)

	')'            shift, and enter state 104


State 104

	Stmt -> 'while' '(' Expr ')' . Block                (rule 27)

	'['            shift, and enter state 21

	Block          goto state 113

State 105

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 25)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 26)

	'['            shift, and enter state 21

	Block          goto state 112

State 106

	Stmt -> 'for' Ident 'in' 'range' . '(' Expr ')' Block    (rule 28)

	'('            shift, and enter state 111


State 107

	Stmt -> LValue '=' Expr ';' .                       (rule 21)

	';'            reduce using rule 21
	'['            reduce using rule 21
	'for'          reduce using rule 21
	'if'           reduce using rule 21
	'return'       reduce using rule 21
	'while'        reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21


State 108

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'||'           reduce using rule 40


State 109

	ListExpr -> Expr ',' . ListExpr                     (rule 59)

	'!'            shift, and enter state 44
	'('            shift, and enter state 45
	')'            reduce using rule 57
	'-'            shift, and enter state 46
	'false'        shift, and enter state 47
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 32
	Integer        goto state 33
	String         goto state 34
	LValue         goto state 35
	Expr6          goto state 36
	Expr5          goto state 37
	Expr4          goto state 38
	Expr3          goto state 39
	Expr2          goto state 40
	Expr1          goto state 41
	Expr           goto state 89
	Expr7          goto state 43
	ListExpr       goto state 110

State 110

	ListExpr -> Expr ',' ListExpr .                     (rule 59)

	')'            reduce using rule 59


State 111

	Stmt -> 'for' Ident 'in' 'range' '(' . Expr ')' Block    (rule 28)

	'!'            shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'false'        shift, and enter state 47
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 32
	Integer        goto state 33
	String         goto state 34
	LValue         goto state 35
	Expr6          goto state 36
	Expr5          goto state 37
	Expr4          goto state 38
	Expr3          goto state 39
	Expr2          goto state 40
	Expr1          goto state 41
	Expr           goto state 115
	Expr7          goto state 43

State 112

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 25)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 26)

	';'            reduce using rule 25
	'['            reduce using rule 25
	'else'         shift, and enter state 114
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'return'       reduce using rule 25
	'while'        reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25


State 113

	Stmt -> 'while' '(' Expr ')' Block .                (rule 27)

	';'            reduce using rule 27
	'['            reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'return'       reduce using rule 27
	'while'        reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27


State 114

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 26)

	'['            shift, and enter state 21

	Block          goto state 117

State 115

	Stmt -> 'for' Ident 'in' 'range' '(' Expr . ')' Block    (rule 28)

	')'            shift, and enter state 116


State 116

	Stmt -> 'for' Ident 'in' 'range' '(' Expr ')' . Block    (rule 28)

	'['            shift, and enter state 21

	Block          goto state 118

State 117

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 26)

	';'            reduce using rule 26
	'['            reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'return'       reduce using rule 26
	'while'        reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26


State 118

	Stmt -> 'for' Ident 'in' 'range' '(' Expr ')' Block .    (rule 28)

	';'            reduce using rule 28
	'['            reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'return'       reduce using rule 28
	'while'        reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 71
Number of terminals: 40
Number of non-terminals: 29
Number of states: 119
